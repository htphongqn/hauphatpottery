#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hauphatpottery.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hauphatpottery")]
	public partial class hauphatpotteryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGROUP(GROUP instance);
    partial void UpdateGROUP(GROUP instance);
    partial void DeleteGROUP(GROUP instance);
    partial void InsertGROUP_MENU(GROUP_MENU instance);
    partial void UpdateGROUP_MENU(GROUP_MENU instance);
    partial void DeleteGROUP_MENU(GROUP_MENU instance);
    partial void InsertMENU_PARENT(MENU_PARENT instance);
    partial void UpdateMENU_PARENT(MENU_PARENT instance);
    partial void DeleteMENU_PARENT(MENU_PARENT instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertUNIT(UNIT instance);
    partial void UpdateUNIT(UNIT instance);
    partial void DeleteUNIT(UNIT instance);
    partial void InsertMATERIAL(MATERIAL instance);
    partial void UpdateMATERIAL(MATERIAL instance);
    partial void DeleteMATERIAL(MATERIAL instance);
    partial void InsertTYPE(TYPE instance);
    partial void UpdateTYPE(TYPE instance);
    partial void DeleteTYPE(TYPE instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertPRODUCT_DETAIL_SIZE(PRODUCT_DETAIL_SIZE instance);
    partial void UpdatePRODUCT_DETAIL_SIZE(PRODUCT_DETAIL_SIZE instance);
    partial void DeletePRODUCT_DETAIL_SIZE(PRODUCT_DETAIL_SIZE instance);
    partial void InsertSHAPE(SHAPE instance);
    partial void UpdateSHAPE(SHAPE instance);
    partial void DeleteSHAPE(SHAPE instance);
    partial void InsertSHAPE_PROPERTY(SHAPE_PROPERTY instance);
    partial void UpdateSHAPE_PROPERTY(SHAPE_PROPERTY instance);
    partial void DeleteSHAPE_PROPERTY(SHAPE_PROPERTY instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertPRODUCT_DETAIL(PRODUCT_DETAIL instance);
    partial void UpdatePRODUCT_DETAIL(PRODUCT_DETAIL instance);
    partial void DeletePRODUCT_DETAIL(PRODUCT_DETAIL instance);
    partial void InsertORDER_DETAIL(ORDER_DETAIL instance);
    partial void UpdateORDER_DETAIL(ORDER_DETAIL instance);
    partial void DeleteORDER_DETAIL(ORDER_DETAIL instance);
    partial void InsertORDER(ORDER instance);
    partial void UpdateORDER(ORDER instance);
    partial void DeleteORDER(ORDER instance);
    partial void InsertORDER_DEADLINE_ORDER_DETAIL(ORDER_DEADLINE_ORDER_DETAIL instance);
    partial void UpdateORDER_DEADLINE_ORDER_DETAIL(ORDER_DEADLINE_ORDER_DETAIL instance);
    partial void DeleteORDER_DEADLINE_ORDER_DETAIL(ORDER_DEADLINE_ORDER_DETAIL instance);
    partial void InsertCOMPANY(COMPANY instance);
    partial void UpdateCOMPANY(COMPANY instance);
    partial void DeleteCOMPANY(COMPANY instance);
    partial void InsertORDERMATERIAL_DETAIL(ORDERMATERIAL_DETAIL instance);
    partial void UpdateORDERMATERIAL_DETAIL(ORDERMATERIAL_DETAIL instance);
    partial void DeleteORDERMATERIAL_DETAIL(ORDERMATERIAL_DETAIL instance);
    partial void InsertORDERMATERIAL(ORDERMATERIAL instance);
    partial void UpdateORDERMATERIAL(ORDERMATERIAL instance);
    partial void DeleteORDERMATERIAL(ORDERMATERIAL instance);
    partial void InsertORDERMATERIAL_PRICE(ORDERMATERIAL_PRICE instance);
    partial void UpdateORDERMATERIAL_PRICE(ORDERMATERIAL_PRICE instance);
    partial void DeleteORDERMATERIAL_PRICE(ORDERMATERIAL_PRICE instance);
    partial void InsertORDER_DEADLINE(ORDER_DEADLINE instance);
    partial void UpdateORDER_DEADLINE(ORDER_DEADLINE instance);
    partial void DeleteORDER_DEADLINE(ORDER_DEADLINE instance);
    partial void InsertINVENTORY(INVENTORY instance);
    partial void UpdateINVENTORY(INVENTORY instance);
    partial void DeleteINVENTORY(INVENTORY instance);
    partial void InsertORDER_DELI(ORDER_DELI instance);
    partial void UpdateORDER_DELI(ORDER_DELI instance);
    partial void DeleteORDER_DELI(ORDER_DELI instance);
    partial void InsertORDER_DELI_DETAIL(ORDER_DELI_DETAIL instance);
    partial void UpdateORDER_DELI_DETAIL(ORDER_DELI_DETAIL instance);
    partial void DeleteORDER_DELI_DETAIL(ORDER_DELI_DETAIL instance);
    partial void InsertPRODUCT_DETAIL_MATERIAL(PRODUCT_DETAIL_MATERIAL instance);
    partial void UpdatePRODUCT_DETAIL_MATERIAL(PRODUCT_DETAIL_MATERIAL instance);
    partial void DeletePRODUCT_DETAIL_MATERIAL(PRODUCT_DETAIL_MATERIAL instance);
    #endregion
		
		public hauphatpotteryDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["hauphatpotteryConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hauphatpotteryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hauphatpotteryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hauphatpotteryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hauphatpotteryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GROUP> GROUPs
		{
			get
			{
				return this.GetTable<GROUP>();
			}
		}
		
		public System.Data.Linq.Table<GROUP_MENU> GROUP_MENUs
		{
			get
			{
				return this.GetTable<GROUP_MENU>();
			}
		}
		
		public System.Data.Linq.Table<MENU_PARENT> MENU_PARENTs
		{
			get
			{
				return this.GetTable<MENU_PARENT>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<UNIT> UNITs
		{
			get
			{
				return this.GetTable<UNIT>();
			}
		}
		
		public System.Data.Linq.Table<MATERIAL> MATERIALs
		{
			get
			{
				return this.GetTable<MATERIAL>();
			}
		}
		
		public System.Data.Linq.Table<TYPE> TYPEs
		{
			get
			{
				return this.GetTable<TYPE>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT_DETAIL_SIZE> PRODUCT_DETAIL_SIZEs
		{
			get
			{
				return this.GetTable<PRODUCT_DETAIL_SIZE>();
			}
		}
		
		public System.Data.Linq.Table<SHAPE> SHAPEs
		{
			get
			{
				return this.GetTable<SHAPE>();
			}
		}
		
		public System.Data.Linq.Table<SHAPE_PROPERTY> SHAPE_PROPERTies
		{
			get
			{
				return this.GetTable<SHAPE_PROPERTY>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT_DETAIL> PRODUCT_DETAILs
		{
			get
			{
				return this.GetTable<PRODUCT_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this.GetTable<ORDER_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<ORDER> ORDERs
		{
			get
			{
				return this.GetTable<ORDER>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DEADLINE_ORDER_DETAIL> ORDER_DEADLINE_ORDER_DETAILs
		{
			get
			{
				return this.GetTable<ORDER_DEADLINE_ORDER_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<COMPANY> COMPANies
		{
			get
			{
				return this.GetTable<COMPANY>();
			}
		}
		
		public System.Data.Linq.Table<ORDERMATERIAL_DETAIL> ORDERMATERIAL_DETAILs
		{
			get
			{
				return this.GetTable<ORDERMATERIAL_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<ORDERMATERIAL> ORDERMATERIALs
		{
			get
			{
				return this.GetTable<ORDERMATERIAL>();
			}
		}
		
		public System.Data.Linq.Table<ORDERMATERIAL_PRICE> ORDERMATERIAL_PRICEs
		{
			get
			{
				return this.GetTable<ORDERMATERIAL_PRICE>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DEADLINE> ORDER_DEADLINEs
		{
			get
			{
				return this.GetTable<ORDER_DEADLINE>();
			}
		}
		
		public System.Data.Linq.Table<INVENTORY> INVENTORies
		{
			get
			{
				return this.GetTable<INVENTORY>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DELI> ORDER_DELIs
		{
			get
			{
				return this.GetTable<ORDER_DELI>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_DELI_DETAIL> ORDER_DELI_DETAILs
		{
			get
			{
				return this.GetTable<ORDER_DELI_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT_DETAIL_MATERIAL> PRODUCT_DETAIL_MATERIALs
		{
			get
			{
				return this.GetTable<PRODUCT_DETAIL_MATERIAL>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[GROUP]")]
	public partial class GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GROUP_ID;
		
		private string _GROUP_NAME;
		
		private System.Nullable<int> _GROUP_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_IDChanging(int value);
    partial void OnGROUP_IDChanged();
    partial void OnGROUP_NAMEChanging(string value);
    partial void OnGROUP_NAMEChanged();
    partial void OnGROUP_TYPEChanging(System.Nullable<int> value);
    partial void OnGROUP_TYPEChanged();
    #endregion
		
		public GROUP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_NAME", DbType="NVarChar(400)")]
		public string GROUP_NAME
		{
			get
			{
				return this._GROUP_NAME;
			}
			set
			{
				if ((this._GROUP_NAME != value))
				{
					this.OnGROUP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._GROUP_NAME = value;
					this.SendPropertyChanged("GROUP_NAME");
					this.OnGROUP_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_TYPE", DbType="Int")]
		public System.Nullable<int> GROUP_TYPE
		{
			get
			{
				return this._GROUP_TYPE;
			}
			set
			{
				if ((this._GROUP_TYPE != value))
				{
					this.OnGROUP_TYPEChanging(value);
					this.SendPropertyChanging();
					this._GROUP_TYPE = value;
					this.SendPropertyChanged("GROUP_TYPE");
					this.OnGROUP_TYPEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GROUP_MENU")]
	public partial class GROUP_MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GROUP_MENU_ID;
		
		private System.Nullable<int> _MENU_ID;
		
		private System.Nullable<int> _GROUP_ID;
		
		private System.Nullable<int> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_MENU_IDChanging(int value);
    partial void OnGROUP_MENU_IDChanged();
    partial void OnMENU_IDChanging(System.Nullable<int> value);
    partial void OnMENU_IDChanged();
    partial void OnGROUP_IDChanging(System.Nullable<int> value);
    partial void OnGROUP_IDChanged();
    partial void OnORDERChanging(System.Nullable<int> value);
    partial void OnORDERChanged();
    #endregion
		
		public GROUP_MENU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_MENU_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GROUP_MENU_ID
		{
			get
			{
				return this._GROUP_MENU_ID;
			}
			set
			{
				if ((this._GROUP_MENU_ID != value))
				{
					this.OnGROUP_MENU_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_MENU_ID = value;
					this.SendPropertyChanged("GROUP_MENU_ID");
					this.OnGROUP_MENU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_ID", DbType="Int")]
		public System.Nullable<int> MENU_ID
		{
			get
			{
				return this._MENU_ID;
			}
			set
			{
				if ((this._MENU_ID != value))
				{
					this.OnMENU_IDChanging(value);
					this.SendPropertyChanging();
					this._MENU_ID = value;
					this.SendPropertyChanged("MENU_ID");
					this.OnMENU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="Int")]
		public System.Nullable<int> GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ORDER]", Storage="_ORDER", DbType="Int")]
		public System.Nullable<int> ORDER
		{
			get
			{
				return this._ORDER;
			}
			set
			{
				if ((this._ORDER != value))
				{
					this.OnORDERChanging(value);
					this.SendPropertyChanging();
					this._ORDER = value;
					this.SendPropertyChanged("ORDER");
					this.OnORDERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU_PARENT")]
	public partial class MENU_PARENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MENU_PAR_ID;
		
		private string _MENU_NAME;
		
		private System.Nullable<int> _MENU_PAR_ACTIVE;
		
		private System.Nullable<int> _MENU_RANK;
		
		private System.Nullable<int> _MENU_PARENT1;
		
		private string _MENU_PARENT_LINK;
		
		private System.Nullable<int> _ORDERBY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMENU_PAR_IDChanging(int value);
    partial void OnMENU_PAR_IDChanged();
    partial void OnMENU_NAMEChanging(string value);
    partial void OnMENU_NAMEChanged();
    partial void OnMENU_PAR_ACTIVEChanging(System.Nullable<int> value);
    partial void OnMENU_PAR_ACTIVEChanged();
    partial void OnMENU_RANKChanging(System.Nullable<int> value);
    partial void OnMENU_RANKChanged();
    partial void OnMENU_PARENT1Changing(System.Nullable<int> value);
    partial void OnMENU_PARENT1Changed();
    partial void OnMENU_PARENT_LINKChanging(string value);
    partial void OnMENU_PARENT_LINKChanged();
    partial void OnORDERBYChanging(System.Nullable<int> value);
    partial void OnORDERBYChanged();
    #endregion
		
		public MENU_PARENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_PAR_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MENU_PAR_ID
		{
			get
			{
				return this._MENU_PAR_ID;
			}
			set
			{
				if ((this._MENU_PAR_ID != value))
				{
					this.OnMENU_PAR_IDChanging(value);
					this.SendPropertyChanging();
					this._MENU_PAR_ID = value;
					this.SendPropertyChanged("MENU_PAR_ID");
					this.OnMENU_PAR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_NAME", DbType="NVarChar(550)")]
		public string MENU_NAME
		{
			get
			{
				return this._MENU_NAME;
			}
			set
			{
				if ((this._MENU_NAME != value))
				{
					this.OnMENU_NAMEChanging(value);
					this.SendPropertyChanging();
					this._MENU_NAME = value;
					this.SendPropertyChanged("MENU_NAME");
					this.OnMENU_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_PAR_ACTIVE", DbType="Int")]
		public System.Nullable<int> MENU_PAR_ACTIVE
		{
			get
			{
				return this._MENU_PAR_ACTIVE;
			}
			set
			{
				if ((this._MENU_PAR_ACTIVE != value))
				{
					this.OnMENU_PAR_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._MENU_PAR_ACTIVE = value;
					this.SendPropertyChanged("MENU_PAR_ACTIVE");
					this.OnMENU_PAR_ACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_RANK", DbType="Int")]
		public System.Nullable<int> MENU_RANK
		{
			get
			{
				return this._MENU_RANK;
			}
			set
			{
				if ((this._MENU_RANK != value))
				{
					this.OnMENU_RANKChanging(value);
					this.SendPropertyChanging();
					this._MENU_RANK = value;
					this.SendPropertyChanged("MENU_RANK");
					this.OnMENU_RANKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MENU_PARENT", Storage="_MENU_PARENT1", DbType="Int")]
		public System.Nullable<int> MENU_PARENT1
		{
			get
			{
				return this._MENU_PARENT1;
			}
			set
			{
				if ((this._MENU_PARENT1 != value))
				{
					this.OnMENU_PARENT1Changing(value);
					this.SendPropertyChanging();
					this._MENU_PARENT1 = value;
					this.SendPropertyChanged("MENU_PARENT1");
					this.OnMENU_PARENT1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_PARENT_LINK", DbType="NVarChar(250)")]
		public string MENU_PARENT_LINK
		{
			get
			{
				return this._MENU_PARENT_LINK;
			}
			set
			{
				if ((this._MENU_PARENT_LINK != value))
				{
					this.OnMENU_PARENT_LINKChanging(value);
					this.SendPropertyChanging();
					this._MENU_PARENT_LINK = value;
					this.SendPropertyChanged("MENU_PARENT_LINK");
					this.OnMENU_PARENT_LINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERBY", DbType="Int")]
		public System.Nullable<int> ORDERBY
		{
			get
			{
				return this._ORDERBY;
			}
			set
			{
				if ((this._ORDERBY != value))
				{
					this.OnORDERBYChanging(value);
					this.SendPropertyChanging();
					this._ORDERBY = value;
					this.SendPropertyChanged("ORDERBY");
					this.OnORDERBYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _USER_NAME;
		
		private string _USER_UN;
		
		private string _USER_PW;
		
		private System.Nullable<int> _USER_TYPE;
		
		private string _SALT;
		
		private string _USER_EMAIL;
		
		private string _USER_ADDRESS;
		
		private string _USER_PHONE;
		
		private System.Nullable<System.DateTime> _USER_DATE;
		
		private System.Nullable<int> _GROUP_ID;
		
		private System.Nullable<int> _USER_ACTIVE;
		
		private System.Nullable<int> _USER_THEM;
		
		private System.Nullable<int> _USER_SUA;
		
		private System.Nullable<int> _USER_XOA;
		
		private System.Nullable<int> _USER_CAPNHAT;
		
		private EntitySet<ORDER> _ORDERs;
		
		private EntitySet<INVENTORY> _INVENTORies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnUSER_NAMEChanging(string value);
    partial void OnUSER_NAMEChanged();
    partial void OnUSER_UNChanging(string value);
    partial void OnUSER_UNChanged();
    partial void OnUSER_PWChanging(string value);
    partial void OnUSER_PWChanged();
    partial void OnUSER_TYPEChanging(System.Nullable<int> value);
    partial void OnUSER_TYPEChanged();
    partial void OnSALTChanging(string value);
    partial void OnSALTChanged();
    partial void OnUSER_EMAILChanging(string value);
    partial void OnUSER_EMAILChanged();
    partial void OnUSER_ADDRESSChanging(string value);
    partial void OnUSER_ADDRESSChanged();
    partial void OnUSER_PHONEChanging(string value);
    partial void OnUSER_PHONEChanged();
    partial void OnUSER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUSER_DATEChanged();
    partial void OnGROUP_IDChanging(System.Nullable<int> value);
    partial void OnGROUP_IDChanged();
    partial void OnUSER_ACTIVEChanging(System.Nullable<int> value);
    partial void OnUSER_ACTIVEChanged();
    partial void OnUSER_THEMChanging(System.Nullable<int> value);
    partial void OnUSER_THEMChanged();
    partial void OnUSER_SUAChanging(System.Nullable<int> value);
    partial void OnUSER_SUAChanged();
    partial void OnUSER_XOAChanging(System.Nullable<int> value);
    partial void OnUSER_XOAChanged();
    partial void OnUSER_CAPNHATChanging(System.Nullable<int> value);
    partial void OnUSER_CAPNHATChanged();
    #endregion
		
		public USER()
		{
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			this._INVENTORies = new EntitySet<INVENTORY>(new Action<INVENTORY>(this.attach_INVENTORies), new Action<INVENTORY>(this.detach_INVENTORies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NAME", DbType="NVarChar(100)")]
		public string USER_NAME
		{
			get
			{
				return this._USER_NAME;
			}
			set
			{
				if ((this._USER_NAME != value))
				{
					this.OnUSER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_NAME = value;
					this.SendPropertyChanged("USER_NAME");
					this.OnUSER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_UN", DbType="VarChar(50)")]
		public string USER_UN
		{
			get
			{
				return this._USER_UN;
			}
			set
			{
				if ((this._USER_UN != value))
				{
					this.OnUSER_UNChanging(value);
					this.SendPropertyChanging();
					this._USER_UN = value;
					this.SendPropertyChanged("USER_UN");
					this.OnUSER_UNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PW", DbType="VarChar(50)")]
		public string USER_PW
		{
			get
			{
				return this._USER_PW;
			}
			set
			{
				if ((this._USER_PW != value))
				{
					this.OnUSER_PWChanging(value);
					this.SendPropertyChanging();
					this._USER_PW = value;
					this.SendPropertyChanged("USER_PW");
					this.OnUSER_PWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_TYPE", DbType="Int")]
		public System.Nullable<int> USER_TYPE
		{
			get
			{
				return this._USER_TYPE;
			}
			set
			{
				if ((this._USER_TYPE != value))
				{
					this.OnUSER_TYPEChanging(value);
					this.SendPropertyChanging();
					this._USER_TYPE = value;
					this.SendPropertyChanged("USER_TYPE");
					this.OnUSER_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALT", DbType="VarChar(50)")]
		public string SALT
		{
			get
			{
				return this._SALT;
			}
			set
			{
				if ((this._SALT != value))
				{
					this.OnSALTChanging(value);
					this.SendPropertyChanging();
					this._SALT = value;
					this.SendPropertyChanged("SALT");
					this.OnSALTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL", DbType="NVarChar(400)")]
		public string USER_EMAIL
		{
			get
			{
				return this._USER_EMAIL;
			}
			set
			{
				if ((this._USER_EMAIL != value))
				{
					this.OnUSER_EMAILChanging(value);
					this.SendPropertyChanging();
					this._USER_EMAIL = value;
					this.SendPropertyChanged("USER_EMAIL");
					this.OnUSER_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ADDRESS", DbType="NVarChar(400)")]
		public string USER_ADDRESS
		{
			get
			{
				return this._USER_ADDRESS;
			}
			set
			{
				if ((this._USER_ADDRESS != value))
				{
					this.OnUSER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._USER_ADDRESS = value;
					this.SendPropertyChanged("USER_ADDRESS");
					this.OnUSER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PHONE", DbType="NVarChar(400)")]
		public string USER_PHONE
		{
			get
			{
				return this._USER_PHONE;
			}
			set
			{
				if ((this._USER_PHONE != value))
				{
					this.OnUSER_PHONEChanging(value);
					this.SendPropertyChanging();
					this._USER_PHONE = value;
					this.SendPropertyChanged("USER_PHONE");
					this.OnUSER_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> USER_DATE
		{
			get
			{
				return this._USER_DATE;
			}
			set
			{
				if ((this._USER_DATE != value))
				{
					this.OnUSER_DATEChanging(value);
					this.SendPropertyChanging();
					this._USER_DATE = value;
					this.SendPropertyChanged("USER_DATE");
					this.OnUSER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="Int")]
		public System.Nullable<int> GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ACTIVE", DbType="Int")]
		public System.Nullable<int> USER_ACTIVE
		{
			get
			{
				return this._USER_ACTIVE;
			}
			set
			{
				if ((this._USER_ACTIVE != value))
				{
					this.OnUSER_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._USER_ACTIVE = value;
					this.SendPropertyChanged("USER_ACTIVE");
					this.OnUSER_ACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_THEM", DbType="Int")]
		public System.Nullable<int> USER_THEM
		{
			get
			{
				return this._USER_THEM;
			}
			set
			{
				if ((this._USER_THEM != value))
				{
					this.OnUSER_THEMChanging(value);
					this.SendPropertyChanging();
					this._USER_THEM = value;
					this.SendPropertyChanged("USER_THEM");
					this.OnUSER_THEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_SUA", DbType="Int")]
		public System.Nullable<int> USER_SUA
		{
			get
			{
				return this._USER_SUA;
			}
			set
			{
				if ((this._USER_SUA != value))
				{
					this.OnUSER_SUAChanging(value);
					this.SendPropertyChanging();
					this._USER_SUA = value;
					this.SendPropertyChanged("USER_SUA");
					this.OnUSER_SUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_XOA", DbType="Int")]
		public System.Nullable<int> USER_XOA
		{
			get
			{
				return this._USER_XOA;
			}
			set
			{
				if ((this._USER_XOA != value))
				{
					this.OnUSER_XOAChanging(value);
					this.SendPropertyChanging();
					this._USER_XOA = value;
					this.SendPropertyChanged("USER_XOA");
					this.OnUSER_XOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_CAPNHAT", DbType="Int")]
		public System.Nullable<int> USER_CAPNHAT
		{
			get
			{
				return this._USER_CAPNHAT;
			}
			set
			{
				if ((this._USER_CAPNHAT != value))
				{
					this.OnUSER_CAPNHATChanging(value);
					this.SendPropertyChanging();
					this._USER_CAPNHAT = value;
					this.SendPropertyChanged("USER_CAPNHAT");
					this.OnUSER_CAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_ORDER", Storage="_ORDERs", ThisKey="USER_ID", OtherKey="CREATOR_ID")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INVENTORY", Storage="_INVENTORies", ThisKey="USER_ID", OtherKey="CREATOR_ID")]
		public EntitySet<INVENTORY> INVENTORies
		{
			get
			{
				return this._INVENTORies;
			}
			set
			{
				this._INVENTORies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_INVENTORies(INVENTORY entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_INVENTORies(INVENTORY entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UNIT")]
	public partial class UNIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _NOTE;
		
		private EntitySet<MATERIAL> _MATERIALs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    #endregion
		
		public UNIT()
		{
			this._MATERIALs = new EntitySet<MATERIAL>(new Action<MATERIAL>(this.attach_MATERIALs), new Action<MATERIAL>(this.detach_MATERIALs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(550)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(550)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UNIT_MATERIAL", Storage="_MATERIALs", ThisKey="ID", OtherKey="UNIT_ID")]
		public EntitySet<MATERIAL> MATERIALs
		{
			get
			{
				return this._MATERIALs;
			}
			set
			{
				this._MATERIALs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MATERIALs(MATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.UNIT = this;
		}
		
		private void detach_MATERIALs(MATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.UNIT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATERIAL")]
	public partial class MATERIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _NOTE;
		
		private System.Nullable<int> _UNIT_ID;
		
		private EntitySet<ORDERMATERIAL_DETAIL> _ORDERMATERIAL_DETAILs;
		
		private EntitySet<PRODUCT_DETAIL_MATERIAL> _PRODUCT_DETAIL_MATERIALs;
		
		private EntityRef<UNIT> _UNIT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnUNIT_IDChanging(System.Nullable<int> value);
    partial void OnUNIT_IDChanged();
    #endregion
		
		public MATERIAL()
		{
			this._ORDERMATERIAL_DETAILs = new EntitySet<ORDERMATERIAL_DETAIL>(new Action<ORDERMATERIAL_DETAIL>(this.attach_ORDERMATERIAL_DETAILs), new Action<ORDERMATERIAL_DETAIL>(this.detach_ORDERMATERIAL_DETAILs));
			this._PRODUCT_DETAIL_MATERIALs = new EntitySet<PRODUCT_DETAIL_MATERIAL>(new Action<PRODUCT_DETAIL_MATERIAL>(this.attach_PRODUCT_DETAIL_MATERIALs), new Action<PRODUCT_DETAIL_MATERIAL>(this.detach_PRODUCT_DETAIL_MATERIALs));
			this._UNIT = default(EntityRef<UNIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(550)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(550)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT_ID", DbType="Int")]
		public System.Nullable<int> UNIT_ID
		{
			get
			{
				return this._UNIT_ID;
			}
			set
			{
				if ((this._UNIT_ID != value))
				{
					if (this._UNIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._UNIT_ID = value;
					this.SendPropertyChanged("UNIT_ID");
					this.OnUNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIAL_ORDERMATERIAL_DETAIL", Storage="_ORDERMATERIAL_DETAILs", ThisKey="ID", OtherKey="MATERIAL_ID")]
		public EntitySet<ORDERMATERIAL_DETAIL> ORDERMATERIAL_DETAILs
		{
			get
			{
				return this._ORDERMATERIAL_DETAILs;
			}
			set
			{
				this._ORDERMATERIAL_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIAL_PRODUCT_DETAIL_MATERIAL", Storage="_PRODUCT_DETAIL_MATERIALs", ThisKey="ID", OtherKey="MATERIAL_ID")]
		public EntitySet<PRODUCT_DETAIL_MATERIAL> PRODUCT_DETAIL_MATERIALs
		{
			get
			{
				return this._PRODUCT_DETAIL_MATERIALs;
			}
			set
			{
				this._PRODUCT_DETAIL_MATERIALs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UNIT_MATERIAL", Storage="_UNIT", ThisKey="UNIT_ID", OtherKey="ID", IsForeignKey=true)]
		public UNIT UNIT
		{
			get
			{
				return this._UNIT.Entity;
			}
			set
			{
				UNIT previousValue = this._UNIT.Entity;
				if (((previousValue != value) 
							|| (this._UNIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UNIT.Entity = null;
						previousValue.MATERIALs.Remove(this);
					}
					this._UNIT.Entity = value;
					if ((value != null))
					{
						value.MATERIALs.Add(this);
						this._UNIT_ID = value.ID;
					}
					else
					{
						this._UNIT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UNIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERMATERIAL_DETAILs(ORDERMATERIAL_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.MATERIAL = this;
		}
		
		private void detach_ORDERMATERIAL_DETAILs(ORDERMATERIAL_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.MATERIAL = null;
		}
		
		private void attach_PRODUCT_DETAIL_MATERIALs(PRODUCT_DETAIL_MATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.MATERIAL = this;
		}
		
		private void detach_PRODUCT_DETAIL_MATERIALs(PRODUCT_DETAIL_MATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.MATERIAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE")]
	public partial class TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _NOTE;
		
		private EntitySet<PRODUCT_DETAIL> _PRODUCT_DETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    #endregion
		
		public TYPE()
		{
			this._PRODUCT_DETAILs = new EntitySet<PRODUCT_DETAIL>(new Action<PRODUCT_DETAIL>(this.attach_PRODUCT_DETAILs), new Action<PRODUCT_DETAIL>(this.detach_PRODUCT_DETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(550)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(550)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_PRODUCT_DETAIL", Storage="_PRODUCT_DETAILs", ThisKey="ID", OtherKey="TYPE_ID")]
		public EntitySet<PRODUCT_DETAIL> PRODUCT_DETAILs
		{
			get
			{
				return this._PRODUCT_DETAILs;
			}
			set
			{
				this._PRODUCT_DETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCT_DETAILs(PRODUCT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE = this;
		}
		
		private void detach_PRODUCT_DETAILs(PRODUCT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _TAX_CODE;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _ADDRESS;
		
		private System.Nullable<System.DateTime> _CREATED_DATE;
		
		private System.Nullable<int> _CREATOR_ID;
		
		private EntitySet<ORDER> _ORDERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnTAX_CODEChanging(string value);
    partial void OnTAX_CODEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCREATED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_DATEChanged();
    partial void OnCREATOR_IDChanging(System.Nullable<int> value);
    partial void OnCREATOR_IDChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAX_CODE", DbType="NVarChar(100)")]
		public string TAX_CODE
		{
			get
			{
				return this._TAX_CODE;
			}
			set
			{
				if ((this._TAX_CODE != value))
				{
					this.OnTAX_CODEChanging(value);
					this.SendPropertyChanging();
					this._TAX_CODE = value;
					this.SendPropertyChanged("TAX_CODE");
					this.OnTAX_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(100)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(550)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(500)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATED_DATE
		{
			get
			{
				return this._CREATED_DATE;
			}
			set
			{
				if ((this._CREATED_DATE != value))
				{
					this.OnCREATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATED_DATE = value;
					this.SendPropertyChanged("CREATED_DATE");
					this.OnCREATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATOR_ID", DbType="Int")]
		public System.Nullable<int> CREATOR_ID
		{
			get
			{
				return this._CREATOR_ID;
			}
			set
			{
				if ((this._CREATOR_ID != value))
				{
					this.OnCREATOR_IDChanging(value);
					this.SendPropertyChanging();
					this._CREATOR_ID = value;
					this.SendPropertyChanged("CREATOR_ID");
					this.OnCREATOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ORDER", Storage="_ORDERs", ThisKey="ID", OtherKey="CUSTOMER_ID")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT_DETAIL_SIZE")]
	public partial class PRODUCT_DETAIL_SIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_ID;
		
		private System.Nullable<int> _D;
		
		private System.Nullable<int> _H;
		
		private System.Nullable<int> _L;
		
		private System.Nullable<int> _W;
		
		private EntityRef<PRODUCT_DETAIL> _PRODUCT_DETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPRODUCT_DETAIL_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_IDChanged();
    partial void OnDChanging(System.Nullable<int> value);
    partial void OnDChanged();
    partial void OnHChanging(System.Nullable<int> value);
    partial void OnHChanged();
    partial void OnLChanging(System.Nullable<int> value);
    partial void OnLChanged();
    partial void OnWChanging(System.Nullable<int> value);
    partial void OnWChanged();
    #endregion
		
		public PRODUCT_DETAIL_SIZE()
		{
			this._PRODUCT_DETAIL = default(EntityRef<PRODUCT_DETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_ID != value))
				{
					if (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_DETAIL_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_ID");
					this.OnPRODUCT_DETAIL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="Int")]
		public System.Nullable<int> D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H", DbType="Int")]
		public System.Nullable<int> H
		{
			get
			{
				return this._H;
			}
			set
			{
				if ((this._H != value))
				{
					this.OnHChanging(value);
					this.SendPropertyChanging();
					this._H = value;
					this.SendPropertyChanged("H");
					this.OnHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L", DbType="Int")]
		public System.Nullable<int> L
		{
			get
			{
				return this._L;
			}
			set
			{
				if ((this._L != value))
				{
					this.OnLChanging(value);
					this.SendPropertyChanging();
					this._L = value;
					this.SendPropertyChanged("L");
					this.OnLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_PRODUCT_DETAIL_SIZE", Storage="_PRODUCT_DETAIL", ThisKey="PRODUCT_DETAIL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PRODUCT_DETAIL PRODUCT_DETAIL
		{
			get
			{
				return this._PRODUCT_DETAIL.Entity;
			}
			set
			{
				PRODUCT_DETAIL previousValue = this._PRODUCT_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT_DETAIL.Entity = null;
						previousValue.PRODUCT_DETAIL_SIZEs.Remove(this);
					}
					this._PRODUCT_DETAIL.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_DETAIL_SIZEs.Add(this);
						this._PRODUCT_DETAIL_ID = value.ID;
					}
					else
					{
						this._PRODUCT_DETAIL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT_DETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SHAPE")]
	public partial class SHAPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private string _NAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public SHAPE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(50)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SHAPE_PROPERTY")]
	public partial class SHAPE_PROPERTY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SHAPE_CODE;
		
		private System.Nullable<int> _D;
		
		private System.Nullable<int> _H;
		
		private System.Nullable<int> _L;
		
		private System.Nullable<int> _W;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSHAPE_CODEChanging(string value);
    partial void OnSHAPE_CODEChanged();
    partial void OnDChanging(System.Nullable<int> value);
    partial void OnDChanged();
    partial void OnHChanging(System.Nullable<int> value);
    partial void OnHChanged();
    partial void OnLChanging(System.Nullable<int> value);
    partial void OnLChanged();
    partial void OnWChanging(System.Nullable<int> value);
    partial void OnWChanged();
    #endregion
		
		public SHAPE_PROPERTY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHAPE_CODE", DbType="NVarChar(50)")]
		public string SHAPE_CODE
		{
			get
			{
				return this._SHAPE_CODE;
			}
			set
			{
				if ((this._SHAPE_CODE != value))
				{
					this.OnSHAPE_CODEChanging(value);
					this.SendPropertyChanging();
					this._SHAPE_CODE = value;
					this.SendPropertyChanged("SHAPE_CODE");
					this.OnSHAPE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="Int")]
		public System.Nullable<int> D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H", DbType="Int")]
		public System.Nullable<int> H
		{
			get
			{
				return this._H;
			}
			set
			{
				if ((this._H != value))
				{
					this.OnHChanging(value);
					this.SendPropertyChanging();
					this._H = value;
					this.SendPropertyChanged("H");
					this.OnHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L", DbType="Int")]
		public System.Nullable<int> L
		{
			get
			{
				return this._L;
			}
			set
			{
				if ((this._L != value))
				{
					this.OnLChanging(value);
					this.SendPropertyChanging();
					this._L = value;
					this.SendPropertyChanged("L");
					this.OnLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private string _IMAGE;
		
		private string _SHAPE_CODE;
		
		private EntitySet<PRODUCT_DETAIL> _PRODUCT_DETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnIMAGEChanging(string value);
    partial void OnIMAGEChanged();
    partial void OnSHAPE_CODEChanging(string value);
    partial void OnSHAPE_CODEChanged();
    #endregion
		
		public PRODUCT()
		{
			this._PRODUCT_DETAILs = new EntitySet<PRODUCT_DETAIL>(new Action<PRODUCT_DETAIL>(this.attach_PRODUCT_DETAILs), new Action<PRODUCT_DETAIL>(this.detach_PRODUCT_DETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(250)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE", DbType="NVarChar(550)")]
		public string IMAGE
		{
			get
			{
				return this._IMAGE;
			}
			set
			{
				if ((this._IMAGE != value))
				{
					this.OnIMAGEChanging(value);
					this.SendPropertyChanging();
					this._IMAGE = value;
					this.SendPropertyChanged("IMAGE");
					this.OnIMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHAPE_CODE", DbType="NVarChar(50)")]
		public string SHAPE_CODE
		{
			get
			{
				return this._SHAPE_CODE;
			}
			set
			{
				if ((this._SHAPE_CODE != value))
				{
					this.OnSHAPE_CODEChanging(value);
					this.SendPropertyChanging();
					this._SHAPE_CODE = value;
					this.SendPropertyChanged("SHAPE_CODE");
					this.OnSHAPE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_PRODUCT_DETAIL", Storage="_PRODUCT_DETAILs", ThisKey="ID", OtherKey="PRODUCT_ID")]
		public EntitySet<PRODUCT_DETAIL> PRODUCT_DETAILs
		{
			get
			{
				return this._PRODUCT_DETAILs;
			}
			set
			{
				this._PRODUCT_DETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCT_DETAILs(PRODUCT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_PRODUCT_DETAILs(PRODUCT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT_DETAIL")]
	public partial class PRODUCT_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private string _NAME;
		
		private System.Nullable<decimal> _M2;
		
		private System.Nullable<decimal> _WEIGHT;
		
		private System.Nullable<int> _TYPE_ID;
		
		private System.Nullable<int> _PRODUCT_ID;
		
		private EntitySet<PRODUCT_DETAIL_SIZE> _PRODUCT_DETAIL_SIZEs;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntitySet<INVENTORY> _INVENTORies;
		
		private EntitySet<ORDER_DELI_DETAIL> _ORDER_DELI_DETAILs;
		
		private EntitySet<PRODUCT_DETAIL_MATERIAL> _PRODUCT_DETAIL_MATERIALs;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
		private EntityRef<TYPE> _TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnM2Changing(System.Nullable<decimal> value);
    partial void OnM2Changed();
    partial void OnWEIGHTChanging(System.Nullable<decimal> value);
    partial void OnWEIGHTChanged();
    partial void OnTYPE_IDChanging(System.Nullable<int> value);
    partial void OnTYPE_IDChanged();
    partial void OnPRODUCT_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_IDChanged();
    #endregion
		
		public PRODUCT_DETAIL()
		{
			this._PRODUCT_DETAIL_SIZEs = new EntitySet<PRODUCT_DETAIL_SIZE>(new Action<PRODUCT_DETAIL_SIZE>(this.attach_PRODUCT_DETAIL_SIZEs), new Action<PRODUCT_DETAIL_SIZE>(this.detach_PRODUCT_DETAIL_SIZEs));
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._INVENTORies = new EntitySet<INVENTORY>(new Action<INVENTORY>(this.attach_INVENTORies), new Action<INVENTORY>(this.detach_INVENTORies));
			this._ORDER_DELI_DETAILs = new EntitySet<ORDER_DELI_DETAIL>(new Action<ORDER_DELI_DETAIL>(this.attach_ORDER_DELI_DETAILs), new Action<ORDER_DELI_DETAIL>(this.detach_ORDER_DELI_DETAILs));
			this._PRODUCT_DETAIL_MATERIALs = new EntitySet<PRODUCT_DETAIL_MATERIAL>(new Action<PRODUCT_DETAIL_MATERIAL>(this.attach_PRODUCT_DETAIL_MATERIALs), new Action<PRODUCT_DETAIL_MATERIAL>(this.detach_PRODUCT_DETAIL_MATERIALs));
			this._PRODUCT = default(EntityRef<PRODUCT>);
			this._TYPE = default(EntityRef<TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(250)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(550)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> M2
		{
			get
			{
				return this._M2;
			}
			set
			{
				if ((this._M2 != value))
				{
					this.OnM2Changing(value);
					this.SendPropertyChanging();
					this._M2 = value;
					this.SendPropertyChanged("M2");
					this.OnM2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEIGHT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WEIGHT
		{
			get
			{
				return this._WEIGHT;
			}
			set
			{
				if ((this._WEIGHT != value))
				{
					this.OnWEIGHTChanging(value);
					this.SendPropertyChanging();
					this._WEIGHT = value;
					this.SendPropertyChanged("WEIGHT");
					this.OnWEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_ID", DbType="Int")]
		public System.Nullable<int> TYPE_ID
		{
			get
			{
				return this._TYPE_ID;
			}
			set
			{
				if ((this._TYPE_ID != value))
				{
					if (this._TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._TYPE_ID = value;
					this.SendPropertyChanged("TYPE_ID");
					this.OnTYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_ID
		{
			get
			{
				return this._PRODUCT_ID;
			}
			set
			{
				if ((this._PRODUCT_ID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ID = value;
					this.SendPropertyChanged("PRODUCT_ID");
					this.OnPRODUCT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_PRODUCT_DETAIL_SIZE", Storage="_PRODUCT_DETAIL_SIZEs", ThisKey="ID", OtherKey="PRODUCT_DETAIL_ID")]
		public EntitySet<PRODUCT_DETAIL_SIZE> PRODUCT_DETAIL_SIZEs
		{
			get
			{
				return this._PRODUCT_DETAIL_SIZEs;
			}
			set
			{
				this._PRODUCT_DETAIL_SIZEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="ID", OtherKey="PRODUCT_DETAIL_ID")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_INVENTORY", Storage="_INVENTORies", ThisKey="ID", OtherKey="PRODUCT_DETAIL_ID")]
		public EntitySet<INVENTORY> INVENTORies
		{
			get
			{
				return this._INVENTORies;
			}
			set
			{
				this._INVENTORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_ORDER_DELI_DETAIL", Storage="_ORDER_DELI_DETAILs", ThisKey="ID", OtherKey="PRODUCT_DETAIL_ID")]
		public EntitySet<ORDER_DELI_DETAIL> ORDER_DELI_DETAILs
		{
			get
			{
				return this._ORDER_DELI_DETAILs;
			}
			set
			{
				this._ORDER_DELI_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_PRODUCT_DETAIL_MATERIAL", Storage="_PRODUCT_DETAIL_MATERIALs", ThisKey="ID", OtherKey="PRODUCT_DETAIL_ID")]
		public EntitySet<PRODUCT_DETAIL_MATERIAL> PRODUCT_DETAIL_MATERIALs
		{
			get
			{
				return this._PRODUCT_DETAIL_MATERIALs;
			}
			set
			{
				this._PRODUCT_DETAIL_MATERIALs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_PRODUCT_DETAIL", Storage="_PRODUCT", ThisKey="PRODUCT_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.PRODUCT_DETAILs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_DETAILs.Add(this);
						this._PRODUCT_ID = value.ID;
					}
					else
					{
						this._PRODUCT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_PRODUCT_DETAIL", Storage="_TYPE", ThisKey="TYPE_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public TYPE TYPE
		{
			get
			{
				return this._TYPE.Entity;
			}
			set
			{
				TYPE previousValue = this._TYPE.Entity;
				if (((previousValue != value) 
							|| (this._TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE.Entity = null;
						previousValue.PRODUCT_DETAILs.Remove(this);
					}
					this._TYPE.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_DETAILs.Add(this);
						this._TYPE_ID = value.ID;
					}
					else
					{
						this._TYPE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCT_DETAIL_SIZEs(PRODUCT_DETAIL_SIZE entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = this;
		}
		
		private void detach_PRODUCT_DETAIL_SIZEs(PRODUCT_DETAIL_SIZE entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = null;
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = null;
		}
		
		private void attach_INVENTORies(INVENTORY entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = this;
		}
		
		private void detach_INVENTORies(INVENTORY entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = null;
		}
		
		private void attach_ORDER_DELI_DETAILs(ORDER_DELI_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = this;
		}
		
		private void detach_ORDER_DELI_DETAILs(ORDER_DELI_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = null;
		}
		
		private void attach_PRODUCT_DETAIL_MATERIALs(PRODUCT_DETAIL_MATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = this;
		}
		
		private void detach_PRODUCT_DETAIL_MATERIALs(PRODUCT_DETAIL_MATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_DETAIL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DETAIL")]
	public partial class ORDER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDER_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_SIZE_ID;
		
		private System.Nullable<int> _QUANTITY;
		
		private System.Nullable<decimal> _PRICE;
		
		private System.Nullable<decimal> _SUBTOTAL;
		
		private string _COLOR1;
		
		private string _COLOR2;
		
		private EntitySet<ORDER_DEADLINE_ORDER_DETAIL> _ORDER_DEADLINE_ORDER_DETAILs;
		
		private EntityRef<PRODUCT_DETAIL> _PRODUCT_DETAIL;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDER_IDChanging(System.Nullable<int> value);
    partial void OnORDER_IDChanged();
    partial void OnPRODUCT_DETAIL_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_IDChanged();
    partial void OnPRODUCT_DETAIL_SIZE_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_SIZE_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    partial void OnSUBTOTALChanging(System.Nullable<decimal> value);
    partial void OnSUBTOTALChanged();
    partial void OnCOLOR1Changing(string value);
    partial void OnCOLOR1Changed();
    partial void OnCOLOR2Changing(string value);
    partial void OnCOLOR2Changed();
    #endregion
		
		public ORDER_DETAIL()
		{
			this._ORDER_DEADLINE_ORDER_DETAILs = new EntitySet<ORDER_DEADLINE_ORDER_DETAIL>(new Action<ORDER_DEADLINE_ORDER_DETAIL>(this.attach_ORDER_DEADLINE_ORDER_DETAILs), new Action<ORDER_DEADLINE_ORDER_DETAIL>(this.detach_ORDER_DEADLINE_ORDER_DETAILs));
			this._PRODUCT_DETAIL = default(EntityRef<PRODUCT_DETAIL>);
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="Int")]
		public System.Nullable<int> ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_ID != value))
				{
					if (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_DETAIL_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_ID");
					this.OnPRODUCT_DETAIL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_SIZE_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_SIZE_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_SIZE_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_SIZE_ID != value))
				{
					this.OnPRODUCT_DETAIL_SIZE_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_SIZE_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_SIZE_ID");
					this.OnPRODUCT_DETAIL_SIZE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBTOTAL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SUBTOTAL
		{
			get
			{
				return this._SUBTOTAL;
			}
			set
			{
				if ((this._SUBTOTAL != value))
				{
					this.OnSUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._SUBTOTAL = value;
					this.SendPropertyChanged("SUBTOTAL");
					this.OnSUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLOR1", DbType="NVarChar(150)")]
		public string COLOR1
		{
			get
			{
				return this._COLOR1;
			}
			set
			{
				if ((this._COLOR1 != value))
				{
					this.OnCOLOR1Changing(value);
					this.SendPropertyChanging();
					this._COLOR1 = value;
					this.SendPropertyChanged("COLOR1");
					this.OnCOLOR1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLOR2", DbType="NVarChar(150)")]
		public string COLOR2
		{
			get
			{
				return this._COLOR2;
			}
			set
			{
				if ((this._COLOR2 != value))
				{
					this.OnCOLOR2Changing(value);
					this.SendPropertyChanging();
					this._COLOR2 = value;
					this.SendPropertyChanged("COLOR2");
					this.OnCOLOR2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_DETAIL_ORDER_DEADLINE_ORDER_DETAIL", Storage="_ORDER_DEADLINE_ORDER_DETAILs", ThisKey="ID", OtherKey="ORDER_DETAIL_ID")]
		public EntitySet<ORDER_DEADLINE_ORDER_DETAIL> ORDER_DEADLINE_ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DEADLINE_ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DEADLINE_ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_ORDER_DETAIL", Storage="_PRODUCT_DETAIL", ThisKey="PRODUCT_DETAIL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PRODUCT_DETAIL PRODUCT_DETAIL
		{
			get
			{
				return this._PRODUCT_DETAIL.Entity;
			}
			set
			{
				PRODUCT_DETAIL previousValue = this._PRODUCT_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT_DETAIL.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._PRODUCT_DETAIL.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._PRODUCT_DETAIL_ID = value.ID;
					}
					else
					{
						this._PRODUCT_DETAIL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT_DETAIL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DETAIL", Storage="_ORDER", ThisKey="ORDER_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDER_DETAILs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDER_DETAILs.Add(this);
						this._ORDER_ID = value.ID;
					}
					else
					{
						this._ORDER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DEADLINE_ORDER_DETAILs(ORDER_DEADLINE_ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_DETAIL = this;
		}
		
		private void detach_ORDER_DEADLINE_ORDER_DETAILs(ORDER_DEADLINE_ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_DETAIL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[ORDER]")]
	public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private System.Nullable<int> _STATUS;
		
		private string _NOTE;
		
		private System.Nullable<System.DateTime> _START_DATE;
		
		private System.Nullable<System.DateTime> _FINISH_DATE;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private System.Nullable<decimal> _TOTALPRICE;
		
		private System.Nullable<decimal> _ORDERPRICE;
		
		private System.Nullable<decimal> _BALANCEPRICE;
		
		private System.Nullable<int> _CUSTOMER_ID;
		
		private System.Nullable<int> _CREATOR_ID;
		
		private EntitySet<ORDER_DETAIL> _ORDER_DETAILs;
		
		private EntitySet<ORDERMATERIAL> _ORDERMATERIALs;
		
		private EntitySet<ORDER_DEADLINE> _ORDER_DEADLINEs;
		
		private EntitySet<INVENTORY> _INVENTORies;
		
		private EntitySet<ORDER_DELI> _ORDER_DELIs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnSTART_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTART_DATEChanged();
    partial void OnFINISH_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnFINISH_DATEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnTOTALPRICEChanging(System.Nullable<decimal> value);
    partial void OnTOTALPRICEChanged();
    partial void OnORDERPRICEChanging(System.Nullable<decimal> value);
    partial void OnORDERPRICEChanged();
    partial void OnBALANCEPRICEChanging(System.Nullable<decimal> value);
    partial void OnBALANCEPRICEChanged();
    partial void OnCUSTOMER_IDChanging(System.Nullable<int> value);
    partial void OnCUSTOMER_IDChanged();
    partial void OnCREATOR_IDChanging(System.Nullable<int> value);
    partial void OnCREATOR_IDChanged();
    #endregion
		
		public ORDER()
		{
			this._ORDER_DETAILs = new EntitySet<ORDER_DETAIL>(new Action<ORDER_DETAIL>(this.attach_ORDER_DETAILs), new Action<ORDER_DETAIL>(this.detach_ORDER_DETAILs));
			this._ORDERMATERIALs = new EntitySet<ORDERMATERIAL>(new Action<ORDERMATERIAL>(this.attach_ORDERMATERIALs), new Action<ORDERMATERIAL>(this.detach_ORDERMATERIALs));
			this._ORDER_DEADLINEs = new EntitySet<ORDER_DEADLINE>(new Action<ORDER_DEADLINE>(this.attach_ORDER_DEADLINEs), new Action<ORDER_DEADLINE>(this.detach_ORDER_DEADLINEs));
			this._INVENTORies = new EntitySet<INVENTORY>(new Action<INVENTORY>(this.attach_INVENTORies), new Action<INVENTORY>(this.detach_INVENTORies));
			this._ORDER_DELIs = new EntitySet<ORDER_DELI>(new Action<ORDER_DELI>(this.attach_ORDER_DELIs), new Action<ORDER_DELI>(this.detach_ORDER_DELIs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(550)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(550)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> START_DATE
		{
			get
			{
				return this._START_DATE;
			}
			set
			{
				if ((this._START_DATE != value))
				{
					this.OnSTART_DATEChanging(value);
					this.SendPropertyChanging();
					this._START_DATE = value;
					this.SendPropertyChanged("START_DATE");
					this.OnSTART_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FINISH_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FINISH_DATE
		{
			get
			{
				return this._FINISH_DATE;
			}
			set
			{
				if ((this._FINISH_DATE != value))
				{
					this.OnFINISH_DATEChanging(value);
					this.SendPropertyChanging();
					this._FINISH_DATE = value;
					this.SendPropertyChanged("FINISH_DATE");
					this.OnFINISH_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTALPRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TOTALPRICE
		{
			get
			{
				return this._TOTALPRICE;
			}
			set
			{
				if ((this._TOTALPRICE != value))
				{
					this.OnTOTALPRICEChanging(value);
					this.SendPropertyChanging();
					this._TOTALPRICE = value;
					this.SendPropertyChanged("TOTALPRICE");
					this.OnTOTALPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERPRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ORDERPRICE
		{
			get
			{
				return this._ORDERPRICE;
			}
			set
			{
				if ((this._ORDERPRICE != value))
				{
					this.OnORDERPRICEChanging(value);
					this.SendPropertyChanging();
					this._ORDERPRICE = value;
					this.SendPropertyChanged("ORDERPRICE");
					this.OnORDERPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BALANCEPRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> BALANCEPRICE
		{
			get
			{
				return this._BALANCEPRICE;
			}
			set
			{
				if ((this._BALANCEPRICE != value))
				{
					this.OnBALANCEPRICEChanging(value);
					this.SendPropertyChanging();
					this._BALANCEPRICE = value;
					this.SendPropertyChanged("BALANCEPRICE");
					this.OnBALANCEPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ID", DbType="Int")]
		public System.Nullable<int> CUSTOMER_ID
		{
			get
			{
				return this._CUSTOMER_ID;
			}
			set
			{
				if ((this._CUSTOMER_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUSTOMER_IDChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ID = value;
					this.SendPropertyChanged("CUSTOMER_ID");
					this.OnCUSTOMER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATOR_ID", DbType="Int")]
		public System.Nullable<int> CREATOR_ID
		{
			get
			{
				return this._CREATOR_ID;
			}
			set
			{
				if ((this._CREATOR_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCREATOR_IDChanging(value);
					this.SendPropertyChanging();
					this._CREATOR_ID = value;
					this.SendPropertyChanged("CREATOR_ID");
					this.OnCREATOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DETAIL", Storage="_ORDER_DETAILs", ThisKey="ID", OtherKey="ORDER_ID")]
		public EntitySet<ORDER_DETAIL> ORDER_DETAILs
		{
			get
			{
				return this._ORDER_DETAILs;
			}
			set
			{
				this._ORDER_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDERMATERIAL", Storage="_ORDERMATERIALs", ThisKey="ID", OtherKey="ORDER_ID")]
		public EntitySet<ORDERMATERIAL> ORDERMATERIALs
		{
			get
			{
				return this._ORDERMATERIALs;
			}
			set
			{
				this._ORDERMATERIALs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DEADLINE", Storage="_ORDER_DEADLINEs", ThisKey="ID", OtherKey="ORDER_ID")]
		public EntitySet<ORDER_DEADLINE> ORDER_DEADLINEs
		{
			get
			{
				return this._ORDER_DEADLINEs;
			}
			set
			{
				this._ORDER_DEADLINEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_INVENTORY", Storage="_INVENTORies", ThisKey="ID", OtherKey="ORDER_ID")]
		public EntitySet<INVENTORY> INVENTORies
		{
			get
			{
				return this._INVENTORies;
			}
			set
			{
				this._INVENTORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DELI", Storage="_ORDER_DELIs", ThisKey="ID", OtherKey="ORDER_ID")]
		public EntitySet<ORDER_DELI> ORDER_DELIs
		{
			get
			{
				return this._ORDER_DELIs;
			}
			set
			{
				this._ORDER_DELIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ORDER", Storage="_CUSTOMER", ThisKey="CUSTOMER_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._CUSTOMER_ID = value.ID;
					}
					else
					{
						this._CUSTOMER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_ORDER", Storage="_USER", ThisKey="CREATOR_ID", OtherKey="USER_ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._CREATOR_ID = value.USER_ID;
					}
					else
					{
						this._CREATOR_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDER_DETAILs(ORDER_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
		
		private void attach_ORDERMATERIALs(ORDERMATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDERMATERIALs(ORDERMATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
		
		private void attach_ORDER_DEADLINEs(ORDER_DEADLINE entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDER_DEADLINEs(ORDER_DEADLINE entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
		
		private void attach_INVENTORies(INVENTORY entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_INVENTORies(INVENTORY entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
		
		private void attach_ORDER_DELIs(ORDER_DELI entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDER_DELIs(ORDER_DELI entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DEADLINE_ORDER_DETAIL")]
	public partial class ORDER_DEADLINE_ORDER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDER_DEADLINE_ID;
		
		private System.Nullable<int> _ORDER_DETAIL_ID;
		
		private System.Nullable<int> _QUANTITY;
		
		private EntityRef<ORDER_DETAIL> _ORDER_DETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDER_DEADLINE_IDChanging(System.Nullable<int> value);
    partial void OnORDER_DEADLINE_IDChanged();
    partial void OnORDER_DETAIL_IDChanging(System.Nullable<int> value);
    partial void OnORDER_DETAIL_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public ORDER_DEADLINE_ORDER_DETAIL()
		{
			this._ORDER_DETAIL = default(EntityRef<ORDER_DETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DEADLINE_ID", DbType="Int")]
		public System.Nullable<int> ORDER_DEADLINE_ID
		{
			get
			{
				return this._ORDER_DEADLINE_ID;
			}
			set
			{
				if ((this._ORDER_DEADLINE_ID != value))
				{
					this.OnORDER_DEADLINE_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DEADLINE_ID = value;
					this.SendPropertyChanged("ORDER_DEADLINE_ID");
					this.OnORDER_DEADLINE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DETAIL_ID", DbType="Int")]
		public System.Nullable<int> ORDER_DETAIL_ID
		{
			get
			{
				return this._ORDER_DETAIL_ID;
			}
			set
			{
				if ((this._ORDER_DETAIL_ID != value))
				{
					if (this._ORDER_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_DETAIL_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DETAIL_ID = value;
					this.SendPropertyChanged("ORDER_DETAIL_ID");
					this.OnORDER_DETAIL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_DETAIL_ORDER_DEADLINE_ORDER_DETAIL", Storage="_ORDER_DETAIL", ThisKey="ORDER_DETAIL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER_DETAIL ORDER_DETAIL
		{
			get
			{
				return this._ORDER_DETAIL.Entity;
			}
			set
			{
				ORDER_DETAIL previousValue = this._ORDER_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._ORDER_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER_DETAIL.Entity = null;
						previousValue.ORDER_DEADLINE_ORDER_DETAILs.Remove(this);
					}
					this._ORDER_DETAIL.Entity = value;
					if ((value != null))
					{
						value.ORDER_DEADLINE_ORDER_DETAILs.Add(this);
						this._ORDER_DETAIL_ID = value.ID;
					}
					else
					{
						this._ORDER_DETAIL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER_DETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMPANY")]
	public partial class COMPANY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _ADDRESS;
		
		private System.Nullable<System.DateTime> _CREATED_DATE;
		
		private System.Nullable<int> _CREATOR_ID;
		
		private EntitySet<ORDERMATERIAL> _ORDERMATERIALs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCREATED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_DATEChanged();
    partial void OnCREATOR_IDChanging(System.Nullable<int> value);
    partial void OnCREATOR_IDChanged();
    #endregion
		
		public COMPANY()
		{
			this._ORDERMATERIALs = new EntitySet<ORDERMATERIAL>(new Action<ORDERMATERIAL>(this.attach_ORDERMATERIALs), new Action<ORDERMATERIAL>(this.detach_ORDERMATERIALs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(550)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(50)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(550)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATED_DATE
		{
			get
			{
				return this._CREATED_DATE;
			}
			set
			{
				if ((this._CREATED_DATE != value))
				{
					this.OnCREATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATED_DATE = value;
					this.SendPropertyChanged("CREATED_DATE");
					this.OnCREATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATOR_ID", DbType="Int")]
		public System.Nullable<int> CREATOR_ID
		{
			get
			{
				return this._CREATOR_ID;
			}
			set
			{
				if ((this._CREATOR_ID != value))
				{
					this.OnCREATOR_IDChanging(value);
					this.SendPropertyChanging();
					this._CREATOR_ID = value;
					this.SendPropertyChanged("CREATOR_ID");
					this.OnCREATOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMPANY_ORDERMATERIAL", Storage="_ORDERMATERIALs", ThisKey="ID", OtherKey="COMPANY_ID")]
		public EntitySet<ORDERMATERIAL> ORDERMATERIALs
		{
			get
			{
				return this._ORDERMATERIALs;
			}
			set
			{
				this._ORDERMATERIALs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERMATERIALs(ORDERMATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.COMPANY = this;
		}
		
		private void detach_ORDERMATERIALs(ORDERMATERIAL entity)
		{
			this.SendPropertyChanging();
			entity.COMPANY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERMATERIAL_DETAIL")]
	public partial class ORDERMATERIAL_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDERMATERIAL_ID;
		
		private System.Nullable<int> _MATERIAL_ID;
		
		private System.Nullable<int> _QUANTITY;
		
		private System.Nullable<decimal> _PRICE;
		
		private System.Nullable<decimal> _SUBTOTAL;
		
		private EntityRef<MATERIAL> _MATERIAL;
		
		private EntityRef<ORDERMATERIAL> _ORDERMATERIAL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDERMATERIAL_IDChanging(System.Nullable<int> value);
    partial void OnORDERMATERIAL_IDChanged();
    partial void OnMATERIAL_IDChanging(System.Nullable<int> value);
    partial void OnMATERIAL_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    partial void OnSUBTOTALChanging(System.Nullable<decimal> value);
    partial void OnSUBTOTALChanged();
    #endregion
		
		public ORDERMATERIAL_DETAIL()
		{
			this._MATERIAL = default(EntityRef<MATERIAL>);
			this._ORDERMATERIAL = default(EntityRef<ORDERMATERIAL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERMATERIAL_ID", DbType="Int")]
		public System.Nullable<int> ORDERMATERIAL_ID
		{
			get
			{
				return this._ORDERMATERIAL_ID;
			}
			set
			{
				if ((this._ORDERMATERIAL_ID != value))
				{
					if (this._ORDERMATERIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDERMATERIAL_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDERMATERIAL_ID = value;
					this.SendPropertyChanged("ORDERMATERIAL_ID");
					this.OnORDERMATERIAL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATERIAL_ID", DbType="Int")]
		public System.Nullable<int> MATERIAL_ID
		{
			get
			{
				return this._MATERIAL_ID;
			}
			set
			{
				if ((this._MATERIAL_ID != value))
				{
					if (this._MATERIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATERIAL_IDChanging(value);
					this.SendPropertyChanging();
					this._MATERIAL_ID = value;
					this.SendPropertyChanged("MATERIAL_ID");
					this.OnMATERIAL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBTOTAL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SUBTOTAL
		{
			get
			{
				return this._SUBTOTAL;
			}
			set
			{
				if ((this._SUBTOTAL != value))
				{
					this.OnSUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._SUBTOTAL = value;
					this.SendPropertyChanged("SUBTOTAL");
					this.OnSUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIAL_ORDERMATERIAL_DETAIL", Storage="_MATERIAL", ThisKey="MATERIAL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public MATERIAL MATERIAL
		{
			get
			{
				return this._MATERIAL.Entity;
			}
			set
			{
				MATERIAL previousValue = this._MATERIAL.Entity;
				if (((previousValue != value) 
							|| (this._MATERIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIAL.Entity = null;
						previousValue.ORDERMATERIAL_DETAILs.Remove(this);
					}
					this._MATERIAL.Entity = value;
					if ((value != null))
					{
						value.ORDERMATERIAL_DETAILs.Add(this);
						this._MATERIAL_ID = value.ID;
					}
					else
					{
						this._MATERIAL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MATERIAL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDERMATERIAL_ORDERMATERIAL_DETAIL", Storage="_ORDERMATERIAL", ThisKey="ORDERMATERIAL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDERMATERIAL ORDERMATERIAL
		{
			get
			{
				return this._ORDERMATERIAL.Entity;
			}
			set
			{
				ORDERMATERIAL previousValue = this._ORDERMATERIAL.Entity;
				if (((previousValue != value) 
							|| (this._ORDERMATERIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDERMATERIAL.Entity = null;
						previousValue.ORDERMATERIAL_DETAILs.Remove(this);
					}
					this._ORDERMATERIAL.Entity = value;
					if ((value != null))
					{
						value.ORDERMATERIAL_DETAILs.Add(this);
						this._ORDERMATERIAL_ID = value.ID;
					}
					else
					{
						this._ORDERMATERIAL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDERMATERIAL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERMATERIAL")]
	public partial class ORDERMATERIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private System.Nullable<decimal> _ORDERPRICE;
		
		private int _TYPE;
		
		private string _NOTE;
		
		private System.Nullable<int> _ORDER_ID;
		
		private System.Nullable<int> _COMPANY_ID;
		
		private System.Nullable<int> _CREATOR_ID;
		
		private System.Nullable<System.DateTime> _CREATED_DATE;
		
		private EntitySet<ORDERMATERIAL_DETAIL> _ORDERMATERIAL_DETAILs;
		
		private EntitySet<ORDERMATERIAL_PRICE> _ORDERMATERIAL_PRICEs;
		
		private EntityRef<COMPANY> _COMPANY;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnORDERPRICEChanging(System.Nullable<decimal> value);
    partial void OnORDERPRICEChanged();
    partial void OnTYPEChanging(int value);
    partial void OnTYPEChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnORDER_IDChanging(System.Nullable<int> value);
    partial void OnORDER_IDChanged();
    partial void OnCOMPANY_IDChanging(System.Nullable<int> value);
    partial void OnCOMPANY_IDChanged();
    partial void OnCREATOR_IDChanging(System.Nullable<int> value);
    partial void OnCREATOR_IDChanged();
    partial void OnCREATED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_DATEChanged();
    #endregion
		
		public ORDERMATERIAL()
		{
			this._ORDERMATERIAL_DETAILs = new EntitySet<ORDERMATERIAL_DETAIL>(new Action<ORDERMATERIAL_DETAIL>(this.attach_ORDERMATERIAL_DETAILs), new Action<ORDERMATERIAL_DETAIL>(this.detach_ORDERMATERIAL_DETAILs));
			this._ORDERMATERIAL_PRICEs = new EntitySet<ORDERMATERIAL_PRICE>(new Action<ORDERMATERIAL_PRICE>(this.attach_ORDERMATERIAL_PRICEs), new Action<ORDERMATERIAL_PRICE>(this.detach_ORDERMATERIAL_PRICEs));
			this._COMPANY = default(EntityRef<COMPANY>);
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(50)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERPRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ORDERPRICE
		{
			get
			{
				return this._ORDERPRICE;
			}
			set
			{
				if ((this._ORDERPRICE != value))
				{
					this.OnORDERPRICEChanging(value);
					this.SendPropertyChanging();
					this._ORDERPRICE = value;
					this.SendPropertyChanged("ORDERPRICE");
					this.OnORDERPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int NOT NULL")]
		public int TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(550)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="Int")]
		public System.Nullable<int> ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="Int")]
		public System.Nullable<int> COMPANY_ID
		{
			get
			{
				return this._COMPANY_ID;
			}
			set
			{
				if ((this._COMPANY_ID != value))
				{
					if (this._COMPANY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOMPANY_IDChanging(value);
					this.SendPropertyChanging();
					this._COMPANY_ID = value;
					this.SendPropertyChanged("COMPANY_ID");
					this.OnCOMPANY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATOR_ID", DbType="Int")]
		public System.Nullable<int> CREATOR_ID
		{
			get
			{
				return this._CREATOR_ID;
			}
			set
			{
				if ((this._CREATOR_ID != value))
				{
					this.OnCREATOR_IDChanging(value);
					this.SendPropertyChanging();
					this._CREATOR_ID = value;
					this.SendPropertyChanged("CREATOR_ID");
					this.OnCREATOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATED_DATE
		{
			get
			{
				return this._CREATED_DATE;
			}
			set
			{
				if ((this._CREATED_DATE != value))
				{
					this.OnCREATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATED_DATE = value;
					this.SendPropertyChanged("CREATED_DATE");
					this.OnCREATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDERMATERIAL_ORDERMATERIAL_DETAIL", Storage="_ORDERMATERIAL_DETAILs", ThisKey="ID", OtherKey="ORDERMATERIAL_ID")]
		public EntitySet<ORDERMATERIAL_DETAIL> ORDERMATERIAL_DETAILs
		{
			get
			{
				return this._ORDERMATERIAL_DETAILs;
			}
			set
			{
				this._ORDERMATERIAL_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDERMATERIAL_ORDERMATERIAL_PRICE", Storage="_ORDERMATERIAL_PRICEs", ThisKey="ID", OtherKey="ORDERMATERIAL_ID")]
		public EntitySet<ORDERMATERIAL_PRICE> ORDERMATERIAL_PRICEs
		{
			get
			{
				return this._ORDERMATERIAL_PRICEs;
			}
			set
			{
				this._ORDERMATERIAL_PRICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMPANY_ORDERMATERIAL", Storage="_COMPANY", ThisKey="COMPANY_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public COMPANY COMPANY
		{
			get
			{
				return this._COMPANY.Entity;
			}
			set
			{
				COMPANY previousValue = this._COMPANY.Entity;
				if (((previousValue != value) 
							|| (this._COMPANY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMPANY.Entity = null;
						previousValue.ORDERMATERIALs.Remove(this);
					}
					this._COMPANY.Entity = value;
					if ((value != null))
					{
						value.ORDERMATERIALs.Add(this);
						this._COMPANY_ID = value.ID;
					}
					else
					{
						this._COMPANY_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("COMPANY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDERMATERIAL", Storage="_ORDER", ThisKey="ORDER_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDERMATERIALs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDERMATERIALs.Add(this);
						this._ORDER_ID = value.ID;
					}
					else
					{
						this._ORDER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERMATERIAL_DETAILs(ORDERMATERIAL_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDERMATERIAL = this;
		}
		
		private void detach_ORDERMATERIAL_DETAILs(ORDERMATERIAL_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDERMATERIAL = null;
		}
		
		private void attach_ORDERMATERIAL_PRICEs(ORDERMATERIAL_PRICE entity)
		{
			this.SendPropertyChanging();
			entity.ORDERMATERIAL = this;
		}
		
		private void detach_ORDERMATERIAL_PRICEs(ORDERMATERIAL_PRICE entity)
		{
			this.SendPropertyChanging();
			entity.ORDERMATERIAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERMATERIAL_PRICE")]
	public partial class ORDERMATERIAL_PRICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDERMATERIAL_ID;
		
		private System.Nullable<decimal> _PRICE;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private EntityRef<ORDERMATERIAL> _ORDERMATERIAL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDERMATERIAL_IDChanging(System.Nullable<int> value);
    partial void OnORDERMATERIAL_IDChanged();
    partial void OnPRICEChanging(System.Nullable<decimal> value);
    partial void OnPRICEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    #endregion
		
		public ORDERMATERIAL_PRICE()
		{
			this._ORDERMATERIAL = default(EntityRef<ORDERMATERIAL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERMATERIAL_ID", DbType="Int")]
		public System.Nullable<int> ORDERMATERIAL_ID
		{
			get
			{
				return this._ORDERMATERIAL_ID;
			}
			set
			{
				if ((this._ORDERMATERIAL_ID != value))
				{
					if (this._ORDERMATERIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDERMATERIAL_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDERMATERIAL_ID = value;
					this.SendPropertyChanged("ORDERMATERIAL_ID");
					this.OnORDERMATERIAL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDERMATERIAL_ORDERMATERIAL_PRICE", Storage="_ORDERMATERIAL", ThisKey="ORDERMATERIAL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDERMATERIAL ORDERMATERIAL
		{
			get
			{
				return this._ORDERMATERIAL.Entity;
			}
			set
			{
				ORDERMATERIAL previousValue = this._ORDERMATERIAL.Entity;
				if (((previousValue != value) 
							|| (this._ORDERMATERIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDERMATERIAL.Entity = null;
						previousValue.ORDERMATERIAL_PRICEs.Remove(this);
					}
					this._ORDERMATERIAL.Entity = value;
					if ((value != null))
					{
						value.ORDERMATERIAL_PRICEs.Add(this);
						this._ORDERMATERIAL_ID = value.ID;
					}
					else
					{
						this._ORDERMATERIAL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDERMATERIAL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DEADLINE")]
	public partial class ORDER_DEADLINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDER_ID;
		
		private System.Nullable<System.DateTime> _DEADLINE_DATE;
		
		private System.Nullable<int> _STATUS;
		
		private string _NOTE;
		
		private System.Nullable<int> _ISCHECK;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDER_IDChanging(System.Nullable<int> value);
    partial void OnORDER_IDChanged();
    partial void OnDEADLINE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDEADLINE_DATEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnISCHECKChanging(System.Nullable<int> value);
    partial void OnISCHECKChanged();
    #endregion
		
		public ORDER_DEADLINE()
		{
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="Int")]
		public System.Nullable<int> ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEADLINE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DEADLINE_DATE
		{
			get
			{
				return this._DEADLINE_DATE;
			}
			set
			{
				if ((this._DEADLINE_DATE != value))
				{
					this.OnDEADLINE_DATEChanging(value);
					this.SendPropertyChanging();
					this._DEADLINE_DATE = value;
					this.SendPropertyChanged("DEADLINE_DATE");
					this.OnDEADLINE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(1050)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISCHECK", DbType="Int")]
		public System.Nullable<int> ISCHECK
		{
			get
			{
				return this._ISCHECK;
			}
			set
			{
				if ((this._ISCHECK != value))
				{
					this.OnISCHECKChanging(value);
					this.SendPropertyChanging();
					this._ISCHECK = value;
					this.SendPropertyChanged("ISCHECK");
					this.OnISCHECKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DEADLINE", Storage="_ORDER", ThisKey="ORDER_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDER_DEADLINEs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDER_DEADLINEs.Add(this);
						this._ORDER_ID = value.ID;
					}
					else
					{
						this._ORDER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVENTORY")]
	public partial class INVENTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDER_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_SIZE_ID;
		
		private System.Nullable<int> _QUANTITY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private System.Nullable<int> _TYPE;
		
		private string _NOTE;
		
		private System.Nullable<int> _CREATOR_ID;
		
		private EntityRef<ORDER> _ORDER;
		
		private EntityRef<PRODUCT_DETAIL> _PRODUCT_DETAIL;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDER_IDChanging(System.Nullable<int> value);
    partial void OnORDER_IDChanged();
    partial void OnPRODUCT_DETAIL_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_IDChanged();
    partial void OnPRODUCT_DETAIL_SIZE_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_SIZE_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnTYPEChanging(System.Nullable<int> value);
    partial void OnTYPEChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnCREATOR_IDChanging(System.Nullable<int> value);
    partial void OnCREATOR_IDChanged();
    #endregion
		
		public INVENTORY()
		{
			this._ORDER = default(EntityRef<ORDER>);
			this._PRODUCT_DETAIL = default(EntityRef<PRODUCT_DETAIL>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="Int")]
		public System.Nullable<int> ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_ID != value))
				{
					if (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_DETAIL_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_ID");
					this.OnPRODUCT_DETAIL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_SIZE_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_SIZE_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_SIZE_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_SIZE_ID != value))
				{
					this.OnPRODUCT_DETAIL_SIZE_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_SIZE_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_SIZE_ID");
					this.OnPRODUCT_DETAIL_SIZE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int")]
		public System.Nullable<int> TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(1050)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATOR_ID", DbType="Int")]
		public System.Nullable<int> CREATOR_ID
		{
			get
			{
				return this._CREATOR_ID;
			}
			set
			{
				if ((this._CREATOR_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCREATOR_IDChanging(value);
					this.SendPropertyChanging();
					this._CREATOR_ID = value;
					this.SendPropertyChanged("CREATOR_ID");
					this.OnCREATOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_INVENTORY", Storage="_ORDER", ThisKey="ORDER_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.INVENTORies.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.INVENTORies.Add(this);
						this._ORDER_ID = value.ID;
					}
					else
					{
						this._ORDER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_INVENTORY", Storage="_PRODUCT_DETAIL", ThisKey="PRODUCT_DETAIL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PRODUCT_DETAIL PRODUCT_DETAIL
		{
			get
			{
				return this._PRODUCT_DETAIL.Entity;
			}
			set
			{
				PRODUCT_DETAIL previousValue = this._PRODUCT_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT_DETAIL.Entity = null;
						previousValue.INVENTORies.Remove(this);
					}
					this._PRODUCT_DETAIL.Entity = value;
					if ((value != null))
					{
						value.INVENTORies.Add(this);
						this._PRODUCT_DETAIL_ID = value.ID;
					}
					else
					{
						this._PRODUCT_DETAIL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT_DETAIL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INVENTORY", Storage="_USER", ThisKey="CREATOR_ID", OtherKey="USER_ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.INVENTORies.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.INVENTORies.Add(this);
						this._CREATOR_ID = value.USER_ID;
					}
					else
					{
						this._CREATOR_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DELI")]
	public partial class ORDER_DELI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE;
		
		private System.Nullable<int> _ORDER_ID;
		
		private System.Nullable<int> _ORDER_DEADLINE_ID;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _NOTE;
		
		private System.Nullable<int> _CREATOR_ID;
		
		private EntitySet<ORDER_DELI_DETAIL> _ORDER_DELI_DETAILs;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnORDER_IDChanging(System.Nullable<int> value);
    partial void OnORDER_IDChanged();
    partial void OnORDER_DEADLINE_IDChanging(System.Nullable<int> value);
    partial void OnORDER_DEADLINE_IDChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnCREATOR_IDChanging(System.Nullable<int> value);
    partial void OnCREATOR_IDChanged();
    #endregion
		
		public ORDER_DELI()
		{
			this._ORDER_DELI_DETAILs = new EntitySet<ORDER_DELI_DETAIL>(new Action<ORDER_DELI_DETAIL>(this.attach_ORDER_DELI_DETAILs), new Action<ORDER_DELI_DETAIL>(this.detach_ORDER_DELI_DETAILs));
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(550)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="Int")]
		public System.Nullable<int> ORDER_ID
		{
			get
			{
				return this._ORDER_ID;
			}
			set
			{
				if ((this._ORDER_ID != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_ID = value;
					this.SendPropertyChanged("ORDER_ID");
					this.OnORDER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DEADLINE_ID", DbType="Int")]
		public System.Nullable<int> ORDER_DEADLINE_ID
		{
			get
			{
				return this._ORDER_DEADLINE_ID;
			}
			set
			{
				if ((this._ORDER_DEADLINE_ID != value))
				{
					this.OnORDER_DEADLINE_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DEADLINE_ID = value;
					this.SendPropertyChanged("ORDER_DEADLINE_ID");
					this.OnORDER_DEADLINE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(1050)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATOR_ID", DbType="Int")]
		public System.Nullable<int> CREATOR_ID
		{
			get
			{
				return this._CREATOR_ID;
			}
			set
			{
				if ((this._CREATOR_ID != value))
				{
					this.OnCREATOR_IDChanging(value);
					this.SendPropertyChanging();
					this._CREATOR_ID = value;
					this.SendPropertyChanged("CREATOR_ID");
					this.OnCREATOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_DELI_ORDER_DELI_DETAIL", Storage="_ORDER_DELI_DETAILs", ThisKey="ID", OtherKey="ORDER_DELI_ID")]
		public EntitySet<ORDER_DELI_DETAIL> ORDER_DELI_DETAILs
		{
			get
			{
				return this._ORDER_DELI_DETAILs;
			}
			set
			{
				this._ORDER_DELI_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_DELI", Storage="_ORDER", ThisKey="ORDER_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDER_DELIs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDER_DELIs.Add(this);
						this._ORDER_ID = value.ID;
					}
					else
					{
						this._ORDER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_DELI_DETAILs(ORDER_DELI_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_DELI = this;
		}
		
		private void detach_ORDER_DELI_DETAILs(ORDER_DELI_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.ORDER_DELI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_DELI_DETAIL")]
	public partial class ORDER_DELI_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ORDER_DELI_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_SIZE_ID;
		
		private System.Nullable<int> _QUANTITY;
		
		private EntityRef<ORDER_DELI> _ORDER_DELI;
		
		private EntityRef<PRODUCT_DETAIL> _PRODUCT_DETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnORDER_DELI_IDChanging(System.Nullable<int> value);
    partial void OnORDER_DELI_IDChanged();
    partial void OnPRODUCT_DETAIL_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_IDChanged();
    partial void OnPRODUCT_DETAIL_SIZE_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_SIZE_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public ORDER_DELI_DETAIL()
		{
			this._ORDER_DELI = default(EntityRef<ORDER_DELI>);
			this._PRODUCT_DETAIL = default(EntityRef<PRODUCT_DETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DELI_ID", DbType="Int")]
		public System.Nullable<int> ORDER_DELI_ID
		{
			get
			{
				return this._ORDER_DELI_ID;
			}
			set
			{
				if ((this._ORDER_DELI_ID != value))
				{
					if (this._ORDER_DELI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_DELI_IDChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DELI_ID = value;
					this.SendPropertyChanged("ORDER_DELI_ID");
					this.OnORDER_DELI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_ID != value))
				{
					if (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_DETAIL_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_ID");
					this.OnPRODUCT_DETAIL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_SIZE_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_SIZE_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_SIZE_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_SIZE_ID != value))
				{
					this.OnPRODUCT_DETAIL_SIZE_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_SIZE_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_SIZE_ID");
					this.OnPRODUCT_DETAIL_SIZE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_DELI_ORDER_DELI_DETAIL", Storage="_ORDER_DELI", ThisKey="ORDER_DELI_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ORDER_DELI ORDER_DELI
		{
			get
			{
				return this._ORDER_DELI.Entity;
			}
			set
			{
				ORDER_DELI previousValue = this._ORDER_DELI.Entity;
				if (((previousValue != value) 
							|| (this._ORDER_DELI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER_DELI.Entity = null;
						previousValue.ORDER_DELI_DETAILs.Remove(this);
					}
					this._ORDER_DELI.Entity = value;
					if ((value != null))
					{
						value.ORDER_DELI_DETAILs.Add(this);
						this._ORDER_DELI_ID = value.ID;
					}
					else
					{
						this._ORDER_DELI_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORDER_DELI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_ORDER_DELI_DETAIL", Storage="_PRODUCT_DETAIL", ThisKey="PRODUCT_DETAIL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PRODUCT_DETAIL PRODUCT_DETAIL
		{
			get
			{
				return this._PRODUCT_DETAIL.Entity;
			}
			set
			{
				PRODUCT_DETAIL previousValue = this._PRODUCT_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT_DETAIL.Entity = null;
						previousValue.ORDER_DELI_DETAILs.Remove(this);
					}
					this._PRODUCT_DETAIL.Entity = value;
					if ((value != null))
					{
						value.ORDER_DELI_DETAILs.Add(this);
						this._PRODUCT_DETAIL_ID = value.ID;
					}
					else
					{
						this._PRODUCT_DETAIL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT_DETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT_DETAIL_MATERIAL")]
	public partial class PRODUCT_DETAIL_MATERIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_ID;
		
		private System.Nullable<int> _PRODUCT_DETAIL_SIZE_ID;
		
		private System.Nullable<int> _MATERIAL_ID;
		
		private System.Nullable<decimal> _QUANTITY;
		
		private EntityRef<MATERIAL> _MATERIAL;
		
		private EntityRef<PRODUCT_DETAIL> _PRODUCT_DETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPRODUCT_DETAIL_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_IDChanged();
    partial void OnPRODUCT_DETAIL_SIZE_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCT_DETAIL_SIZE_IDChanged();
    partial void OnMATERIAL_IDChanging(System.Nullable<int> value);
    partial void OnMATERIAL_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<decimal> value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public PRODUCT_DETAIL_MATERIAL()
		{
			this._MATERIAL = default(EntityRef<MATERIAL>);
			this._PRODUCT_DETAIL = default(EntityRef<PRODUCT_DETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_ID != value))
				{
					if (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_DETAIL_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_ID");
					this.OnPRODUCT_DETAIL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_DETAIL_SIZE_ID", DbType="Int")]
		public System.Nullable<int> PRODUCT_DETAIL_SIZE_ID
		{
			get
			{
				return this._PRODUCT_DETAIL_SIZE_ID;
			}
			set
			{
				if ((this._PRODUCT_DETAIL_SIZE_ID != value))
				{
					this.OnPRODUCT_DETAIL_SIZE_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_DETAIL_SIZE_ID = value;
					this.SendPropertyChanged("PRODUCT_DETAIL_SIZE_ID");
					this.OnPRODUCT_DETAIL_SIZE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATERIAL_ID", DbType="Int")]
		public System.Nullable<int> MATERIAL_ID
		{
			get
			{
				return this._MATERIAL_ID;
			}
			set
			{
				if ((this._MATERIAL_ID != value))
				{
					if (this._MATERIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATERIAL_IDChanging(value);
					this.SendPropertyChanging();
					this._MATERIAL_ID = value;
					this.SendPropertyChanged("MATERIAL_ID");
					this.OnMATERIAL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIAL_PRODUCT_DETAIL_MATERIAL", Storage="_MATERIAL", ThisKey="MATERIAL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public MATERIAL MATERIAL
		{
			get
			{
				return this._MATERIAL.Entity;
			}
			set
			{
				MATERIAL previousValue = this._MATERIAL.Entity;
				if (((previousValue != value) 
							|| (this._MATERIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIAL.Entity = null;
						previousValue.PRODUCT_DETAIL_MATERIALs.Remove(this);
					}
					this._MATERIAL.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_DETAIL_MATERIALs.Add(this);
						this._MATERIAL_ID = value.ID;
					}
					else
					{
						this._MATERIAL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MATERIAL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_PRODUCT_DETAIL_MATERIAL", Storage="_PRODUCT_DETAIL", ThisKey="PRODUCT_DETAIL_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PRODUCT_DETAIL PRODUCT_DETAIL
		{
			get
			{
				return this._PRODUCT_DETAIL.Entity;
			}
			set
			{
				PRODUCT_DETAIL previousValue = this._PRODUCT_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT_DETAIL.Entity = null;
						previousValue.PRODUCT_DETAIL_MATERIALs.Remove(this);
					}
					this._PRODUCT_DETAIL.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_DETAIL_MATERIALs.Add(this);
						this._PRODUCT_DETAIL_ID = value.ID;
					}
					else
					{
						this._PRODUCT_DETAIL_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCT_DETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
